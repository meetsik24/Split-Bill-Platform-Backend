version: '3.8'

services:
  # PostgreSQL Database (for local development)
  postgres:
    image: postgres:15-alpine
    container_name: splitbill-postgres
    environment:
      POSTGRES_DB: splitbill
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: splitbill-rednis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Application (production ready)
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: splitbill-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/splitbill
      - PORT=3000
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data:
